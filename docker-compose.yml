version: '3.7'
services:
  cicd_delegator:
    env_file: .env
    build: ./cicd_delegator
    networks:
        - internal
        - cicd_delegator
    environment:
        INDEX_HOST: http://cicd_index:5000
    restart: "unless-stopped"
  cicd_index:
    build: ./cicd_index
    env_file: .env
    networks:
        - internal
    restart: "unless-stopped"
    expose:
        - 5000
    environment:
        FLASK_ENV: development
        DISPLAY_TIMEZONE: Europe/Berlin
        DATE_FORMAT: '_d._m._Y _H:_M:_S'
        MONGO_HOST: mongo
        MONGO_PORT: 27017
        MONGO_USERNAME: admin
        MONGO_PASSWORD: 1
        JENKINS_URL: ${JENKINS_URL}
        JENKINS_USER: ${JENKINS_USER}
        JENKINS_PASSWORD: ${JENKINS_PASSWORD}
        WEBSSH_CICD_WORKSPACE: /cicd_workspace
    volumes:
        - ${DUMPS_PATH}:/opt/dumps
        - ${CICD_WORKSPACE}:/cicd_workspace
        - ./cicd_index:/code
        - /var/run/docker.sock:/var/run/docker.sock
        - /var/lib/docker:/display_resources/docker
        - /:/display_resources/root
  cicd_postgres:
    image: postgres:12
    restart: 'unless-stopped'
    command: postgres -c 'max_connections=1000'
    environment:
        POSTGRES_PASSWORD: ${DB_PASSWORD}
        POSTGRES_USER: ${DB_USER}
    volumes:
        - ./data:/var/lib/postgresql/data
    ports:
        - "${DB_HOST}:${DB_PORT}:5432"
  mongo:
    image: mongo
    restart: "unless-stopped"
    networks:
        - internal
    volumes:
        - ./mongo_data:/data/db
    expose:
        - 27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: 1

  mongo-express:
    image: mongo-express
    restart: "unless-stopped"
    networks:
        - internal
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: 1

  nginx:
    build: nginx
    restart: unless-stopped
    networks:
        - cicd_delegator
        - internal
    ports:
        - ${CICD_BINDING}:80

  webssh:
    build: webssh
    restart: unless-stopped
    environment:
        ODOO_SETTINGS: /home/jenkins/.odoo
    networks:
      - cicd_delegator
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /opt/odoo:/opt/odoo
      - ${ODOO_SETTINGS}:/root/.odoo
      - ${CICD_WORKSPACE}:/cicd_workspace
networks:
    cicd_delegator:
        name: ${CICD_NETWORK_NAME}
    internal:

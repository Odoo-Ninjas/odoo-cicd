version: '3.7'
services:
  cicd_delegator:
    build: ./cicd_delegator
    ports:
        - ${CICD_BINDING}:80
    networks:
        - cicd_delegator
    environment:
        REGISTRY_SITES: /registry_sites
    volumes:
        - ./registry.json:/registry.json
        - ./registry_sites:/registry_sites
    restart: "unless-stopped"
  cicd_index:
    build: ./cicd_index
    networks:
        - cicd_delegator
        - internal
    restart: "unless-stopped"
    environment:
        FLASK_ENV: development
        REGISTRY_SITES: /registry_sites
        DISPLAY_TIMEZONE: Europe/Berlin
        DATE_FORMAT: '_d._m._Y _H:_M:_S'
        MONGO_HOST: mongo
        MONGO_PORT: 27017
        MONGO_USERNAME: admin
        MONGO_PASSWORD: 1
        WORKSPACES_DIR: /jenkins_workspaces
        JENKINS_URL: ${JENKINS_URL}
        JENKINS_USER: ${JENKINS_USER}
        JENKINS_PASSWORD: ${JENKINS_PASSWORD}
    volumes:
        - ./registry.json:/registry.json
        - ./registry_sites:/registry_sites
        - /var/run/docker.sock:/var/run/docker.sock
        - /var/lib/jenkins/workspace:/jenkins_workspaces
  cicd_postgres:
        container_name: cicd_postgres
        image: postgres:12
        restart: 'unless-stopped'
        command: postgres -c 'max_connections=1000'
        environment:
            POSTGRES_PASSWORD: cicd_is_cool
            POSTGRES_USER: cicd
        volumes:
            - ./data:/var/lib/postgresql/data
        ports:
            - "0.0.0.0:5432:5432"
  mongo:
    image: mongo
    restart: "unless-stopped"
    networks:
        - internal
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: 1
      #volumes:
      #  - ./mongo/data:/data/db

  mongo-express:
    image: mongo-express
    restart: "unless-stopped"
    ports:
        - 8081:8081
    networks:
        - internal
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: 1
networks:
    cicd_delegator:
        name: ${CICD_NETWORK_NAME}
    internal:

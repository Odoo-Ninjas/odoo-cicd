<odoo>
	<data noupdate='0'>
		<record id="fetch_new_branches" model="ir.cron">
			<field name="name">cicd.git.repo:_cron_fetch()</field>
			<field name="interval_number">30</field>
			<field name="interval_type">seconds</field>
			<field name="model_id" ref="model_cicd_git_repo" />
			<field name="state">code</field>
			<field name="code">model._cron_fetch()</field>
			<field name="nextcall" eval="'2022-01-01 20:15:00'" />
			<field name="numbercall">-1</field>
		</record>
		<record id="update_docker_states_per_machine" model="ir.cron">
			<field name="name">cicd.machine:_update_docker_containers()</field>
			<field name="interval_number">30</field>
			<field name="interval_type">seconds</field>
			<field name="model_id" ref="model_cicd_machine" />
			<field name="state">code</field>
			<field name="code">model._cron_update_docker_containers()</field>
			<field name="nextcall" eval="'2022-01-01 20:15:00'" />
			<field name="numbercall">-1</field>
		</record>
		<record id="update_docker_states" model="ir.cron">
			<field name="name">cicd.git.branch:docker_get_state(now=True)</field>
			<field name="interval_number">40</field>
			<field name="interval_type">seconds</field>
			<field name="model_id" ref="model_cicd_git_branch" />
			<field name="state">code</field>
			<field name="code">model._cron_docker_get_state()</field>
			<field name="nextcall" eval="'2022-01-01 20:15:00'" />
			<field name="numbercall">-1</field>
		</record>
		<record id="inactivity_cycle_down" model="ir.cron">
			<field name="name">cicd.git.branch:inactivity_cycle_down()</field>
			<field name="interval_number">10</field>
			<field name="interval_type">minutes</field>
			<field name="model_id" ref="model_cicd_git_branch" />
			<field name="state">code</field>
			<field name="code">model._inactivity_cycle_down()</field>
			<field name="nextcall" eval="'2022-01-01 20:15:00'" />
			<field name="numbercall">-1</field>
		</record>
		<record id="update_databases" model="ir.cron">
			<field name="name">update_databases</field>
			<field name="interval_number">1</field>
			<field name="interval_type">minutes</field>
			<field name="model_id" ref="model_cicd_postgres" />
			<field name="state">code</field>
			<field name="code">
model.search([]).update_databases()
			</field>
			<field name="nextcall" eval="'2022-01-01 20:15:00'" />
			<field name="numbercall">-1</field>
		</record>
		<record id="update_volumes_dumps" model="ir.cron">
			<field name="name">update_volumes_dumps</field>
			<field name="interval_number">30</field>
			<field name="interval_type">seconds</field>
			<field name="model_id" ref="model_cicd_machine" />
			<field name="state">code</field>
			<field name="code">
env['cicd.machine.volume']._cron_update()
env.cr.commit()
env['cicd.dump']._cron_update()
			</field>
			<field name="nextcall" eval="'2022-01-01 20:15:00'" />
			<field name="numbercall">-1</field>
		</record>
		<record id="autobackup" model="ir.cron">
			<field name="name">autobackup</field>
			<field name="interval_number">1</field>
			<field name="interval_type">days</field>
			<field name="model_id" ref="model_cicd_git_branch" />
			<field name="state">code</field>
			<field name="code">model._cron_autobackup()</field>
			<field name="nextcall" eval="'2022-01-01 02:00:00'" />
			<field name="numbercall">-1</field>
		</record>
		<record id="testruns" model="ir.cron">
			<!--
				Creates test runs and executes startable test runs.
			-->
			<field name="name">testruns</field>
			<!-- increase -->
			<field name="interval_number">30</field>
			<field name="interval_type">seconds</field>
			<field name="model_id" ref="model_cicd_git_branch" />
			<field name="state">code</field>
			<field name="code">model._cron_make_test_runs()</field>
			<field name="nextcall" eval="'2022-01-01 20:15:00'" />
			<field name="numbercall">-1</field>
		</record>
		<record id="clean_old_tasks" model="ir.cron">
			<field name="name">cicd.task:_cron_cleanup()</field>
			<field name="interval_number">1</field>
			<field name="interval_type">days</field>
			<field name="model_id" ref="model_cicd_task" />
			<field name="state">code</field>
			<field name="code">model.search([])._cron_cleanup()</field>
			<field name="nextcall" eval="'2022-01-01 20:15:00'" />
			<field name="numbercall">-1</field>
		</record>
		<record id="clean_branches" model="ir.cron">
			<field name="name">cicd.git.repo:_cron_cleanup()</field>
			<field name="interval_number">1</field>
			<field name="interval_type">days</field>
			<field name="model_id" ref="model_cicd_git_repo" />
			<field name="state">code</field>
			<field name="code">model.search([])._cron_cleanup()</field>
			<field name="nextcall" eval="'2022-01-01 20:15:00'" />
			<field name="numbercall">-1</field>
		</record>
		<record id="reschedule_failed_jobs" model="ir.cron">
			<field name="name">cicd:reschedule_failed_jobs</field>
			<field name="interval_number">1</field>
			<field name="interval_type">minutes</field>
			<field name="model_id" ref="queue_job.model_queue_job" />
			<field name="state">code</field>
			<field name="code">
reasons = [
	'could not serialize access due to concurrent update',
	'cannot stat',
	'server closed the connection unexpectedly',
	'RetryableJobError',
	'Failed to put the local file',
	'psycopg2.errors',
	'Timeout',
	'.git/index.lock',
	'duplicate key value violates unique constraint "cicd_git_commit_name"',
	# following happened when using bitbucket - was slow on that day and timed out
	'Could not read from remote repository',
	'Lock could not be acquired',
	'LockNotAvailable',
	'Permission denied',
	'does not exist yet',
]
for reason in reasons:
	model.search([('state', '=', 'failed'), ('exc_info', 'ilike', reason)]).write({'state': 'pending'})</field>
			<field name="nextcall" eval="'2022-01-01 20:15:00'" />
			<field name="numbercall">-1</field>
		</record>
		<record id="after_blocking_done_update" model="ir.cron">
			<field name="name">cicd.git.branch:_cron_check_blocking_done()</field>
			<field name="interval_number">1</field>
			<field name="interval_type">minutes</field>
			<field name="model_id" ref="model_cicd_git_branch" />
			<field name="state">code</field>
			<field name="code">model._cron_check_blocking_done()</field>
			<field name="nextcall" eval="'2022-01-01 20:15:00'" />
			<field name="numbercall">-1</field>
		</record>
		<record id="garbage_collect_job" model="ir.cron">
			<field name="name">cicd.git.branch:_cron_garbage_collect()</field>
			<field name="interval_number">1</field>
			<field name="interval_type">days</field>
			<field name="model_id" ref="model_cicd_git_branch" />
			<field name="state">code</field>
			<field name="code">model._cron_garbage_collect()</field>
			<field name="nextcall" eval="'2022-01-01 20:15:00'" />
			<field name="numbercall">-1</field>
		</record>
	</data>
</odoo>

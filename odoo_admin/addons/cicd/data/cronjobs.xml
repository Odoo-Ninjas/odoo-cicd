<odoo>
	<data noupdate='0'>
		<record id="fetch_new_branches" model="ir.cron">
			<field name="name">fetch_new_branches</field>
			<field name="interval_number">1</field>
			<field name="interval_type">minutes</field>
			<field name="model_id" ref="model_cicd_git_repo" />
			<field name="state">code</field>
			<field name="code">model._cron_fetch()</field>
			<field name="nextcall" eval="'2000-01-01 20:15:00'" />
			<field name="numbercall">-1</field>
		</record>
		<record id="update_docker_states" model="ir.cron">
			<field name="name">update_docker_states</field>
			<field name="interval_number">1</field>
			<field name="interval_type">minutes</field>
			<field name="model_id" ref="model_cicd_git_branch" />
			<field name="state">code</field>
			<field name="code">model.with_context(active_test=False).search([]).docker_get_state(now=False, advisory_lock=False)</field>
			<field name="nextcall" eval="'2000-01-01 20:15:00'" />
			<field name="numbercall">-1</field>
		</record>
		<record id="inactivity_cycle_down" model="ir.cron">
			<field name="name">cycle down inactive sites</field>
			<field name="interval_number">10</field>
			<field name="interval_type">minutes</field>
			<field name="model_id" ref="model_cicd_git_branch" />
			<field name="state">code</field>
			<field name="code">model.with_context(active_test=False).search([]).inactivity_cycle_down()</field>
			<field name="nextcall" eval="'2000-01-01 20:15:00'" />
			<field name="numbercall">-1</field>
		</record>
		<record id="update_databases" model="ir.cron">
			<field name="name">update_databases</field>
			<field name="interval_number">1</field>
			<field name="interval_type">minutes</field>
			<field name="model_id" ref="model_cicd_postgres" />
			<field name="state">code</field>
			<field name="code">
model.search([]).update_databases()
			</field>
			<field name="nextcall" eval="'2000-01-01 20:15:00'" />
			<field name="numbercall">-1</field>
		</record>
		<record id="update_volumes_dumps" model="ir.cron">
			<field name="name">update_volumes_dumps</field>
			<field name="interval_number">1</field>
			<field name="interval_type">minutes</field>
			<field name="model_id" ref="model_cicd_machine" />
			<field name="state">code</field>
			<field name="code">
env['cicd.machine.volume']._cron_update()
env['cicd.dump']._cron_update()
			</field>
			<field name="nextcall" eval="'2000-01-01 20:15:00'" />
			<field name="numbercall">-1</field>
		</record>
		<record id="autobackup" model="ir.cron">
			<field name="name">autobackup</field>
			<field name="interval_number">1</field>
			<field name="interval_type">days</field>
			<field name="model_id" ref="model_cicd_git_branch" />
			<field name="state">code</field>
			<field name="code">model.search([('autobackup', '=', True)])._cron_autobackup()</field>
			<field name="nextcall" eval="'2000-01-01 02:00:00'" />
			<field name="numbercall">-1</field>
		</record>
		<record id="testruns" model="ir.cron">
			<field name="name">testruns</field>
			<field name="interval_number">1</field>
			<field name="interval_type">minutes</field>
			<field name="model_id" ref="model_cicd_git_branch" />
			<field name="state">code</field>
			<field name="code">model._cron_make_test_runs()</field>
			<field name="nextcall" eval="'2000-01-01 20:15:00'" />
			<field name="numbercall">-1</field>
		</record>
		<record id="update_candidates" model="ir.cron">
			<field name="name">add tested branches to candidates</field>
			<field name="interval_number">1</field>
			<field name="interval_type">minutes</field>
			<field name="model_id" ref="model_cicd_release" />
			<field name="state">code</field>
			<field name="code">model.search([]).collect_tested_branches()</field>
			<field name="nextcall" eval="'2000-01-01 20:15:00'" />
			<field name="numbercall">-1</field>
		</record>
		<record id="clean_old_tasks" model="ir.cron">
			<field name="name">cleanup old tasks</field>
			<field name="interval_number">1</field>
			<field name="interval_type">days</field>
			<field name="model_id" ref="model_cicd_task" />
			<field name="state">code</field>
			<field name="code">model.search([])._cron_cleanup()</field>
			<field name="nextcall" eval="'2000-01-01 20:15:00'" />
			<field name="numbercall">-1</field>
		</record>
		<record id="clean_branches" model="ir.cron">
			<field name="name">cleanup branches</field>
			<field name="interval_number">1</field>
			<field name="interval_type">days</field>
			<field name="model_id" ref="model_cicd_git_repo" />
			<field name="state">code</field>
			<field name="code">model.search([])._cron_cleanup()</field>
			<field name="nextcall" eval="'2000-01-01 20:15:00'" />
			<field name="numbercall">-1</field>
		</record>
		<record id="clear_old_queuejobs" model="ir.cron">
			<field name="name">clear_old_queuejobs</field>
			<field name="interval_number">5</field>
			<field name="interval_type">hours</field>
			<field name="model_id" ref="queue_job.model_queue_job" />
			<field name="state">code</field>
			<field name="code">
dt = (datetime.datetime.now() - datetime.timedelta(days=20)).strftime("%Y-%m-%d %H:%M:%S")
model.search([('state', '=', 'done'), ('date_created', '&lt;', dt)]).unlink()</field>
			<field name="nextcall" eval="'2000-01-01 20:15:00'" />
			<field name="numbercall">-1</field>
		</record>
		<record id="reschedule_failed_jobs" model="ir.cron">
			<field name="name">reschedule_failed_jobs</field>
			<field name="interval_number">1</field>
			<field name="interval_type">minutes</field>
			<field name="model_id" ref="queue_job.model_queue_job" />
			<field name="state">code</field>
			<field name="code">
reasons = [
	'could not serialize access due to concurrent update',
	'cannot stat',
	'server closed the connection unexpectedly',
	'RetryableJobError',
	'Failed to put the local file',
	'self.BEGIN_TAG.match(lines[start])',  # paramiko
	'.git/index.lock',
]
for reason in reasons:
	model.search([('state', '=', 'failed'), ('exc_info', 'ilike', reason)]).write({'state': 'pending'})</field>
			<field name="nextcall" eval="'2000-01-01 20:15:00'" />
			<field name="numbercall">-1</field>
		</record>
		<record id="after_blocking_done_update" model="ir.cron">
			<field name="name">after_blocking_done_update</field>
			<field name="interval_number">1</field>
			<field name="interval_type">minutes</field>
			<field name="model_id" ref="model_cicd_git_branch" />
			<field name="state">code</field>
			<field name="code">model._cron_check_blocking_done()</field>
			<field name="nextcall" eval="'2000-01-01 20:15:00'" />
			<field name="numbercall">-1</field>
		</record>
		<record id="garbage_collect_job" model="ir.cron">
			<field name="name">garbage_collect git</field>
			<field name="interval_number">4</field>
			<field name="interval_type">hours</field>
			<field name="model_id" ref="model_cicd_git_branch" />
			<field name="state">code</field>
			<field name="code">model._cron_garbage_collect()</field>
			<field name="nextcall" eval="'2000-01-01 20:15:00'" />
			<field name="numbercall">-1</field>
		</record>
		<record id="prepare_release" model="ir.cron">
			<field name="name">prepare_release</field>
			<field name="interval_number">1</field>
			<field name="interval_type">minutes</field>
			<field name="model_id" ref="model_cicd_release" />
			<field name="state">code</field>
			<field name="code">model.search([])._cron_prepare_release()</field>
			<field name="nextcall" eval="'2000-01-01 20:15:00'" />
			<field name="numbercall">-1</field>
		</record>

		<record id="perform_release" model="ir.cron">
			<field name="name">perform_release</field>
			<field name="interval_number">1</field>
			<field name="interval_type">minutes</field>
			<field name="model_id" ref="model_cicd_release" />
			<field name="state">code</field>
			<field name="code">model.search([]).do_release_if_planned()</field>
			<field name="nextcall" eval="'2000-01-01 20:15:00'" />
			<field name="numbercall">-1</field>
		</record>
	</data>
</odoo>